stages:
  - build
  - scan
  - push
  - deploy

variables:
  DOCKER_IMAGE: registry.gitlab.com/your-group/your-project
  SONAR_PROJECT_KEY: your_project_key
  SONAR_HOST_URL: http://your-sonarqube-url
  SONAR_TOKEN: $SONAR_TOKEN

# -------------------------
# BUILD
# -------------------------
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
  only:
    - main

# -------------------------
# SCAN (Trivy + SonarQube + ZAP)
# -------------------------

trivy_scan:
  stage: scan
  image: aquasec/trivy:latest
  script:
    - trivy image --exit-code 1 --severity HIGH,CRITICAL $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
  allow_failure: true

sonarqube_scan:
  stage: scan
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - sonar-scanner \
        -Dsonar.projectKey=$SONAR_PROJECT_KEY \
        -Dsonar.sources=. \
        -Dsonar.host.url=$SONAR_HOST_URL \
        -Dsonar.login=$SONAR_TOKEN
  only:
    - main

zap_scan:
  stage: scan
  image: owasp/zap2docker-stable
  script:
    - zap-baseline.py -t http://your-running-app-url -g gen.conf -r zap-report.html
  artifacts:
    paths:
      - zap-report.html
  allow_failure: true

# -------------------------
# PUSH
# -------------------------
push_image:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    - main

# -------------------------
# DEPLOY
# -------------------------
deploy:
  stage: deploy
  script:
    - echo "Deploying your application..."
    # Add your deploy commands here (e.g., Ansible, SSH, Kubernetes)
  only:
    - main
#Remplacez les espaces réservés tels que your-group/your-project, your_project_key, your-sonarqube-url, et your-running-app-urlpar vos valeurs réelles.

#S'assurer:

#Votre projet comprend un Dockerfile.

#Vos variables de registre ( CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, etc.) sont définies dans les paramètres GitLab CI/CD.

#Vous avez correctement intégré SonarQube (avec une instance et un jeton en cours d'exécution).

#Votre application est déployée et accessible par ZAP